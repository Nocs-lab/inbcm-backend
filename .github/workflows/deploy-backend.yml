name: Publish Docker image

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
      - development
    types: [closed]

jobs:
  push_to_registry:
    name: Push Docker image to Registry
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Set Docker repository name for main branch
        if: github.ref == 'refs/heads/main'
        run: |
          echo "DOCKER_REPOSITORY=inbcm-backend-main" >> $GITHUB_ENV
          echo "${{ secrets.ENVS_MAIN }}" > .env

      - name: Set Docker repository name for development branch
        if: github.ref == 'refs/heads/development'
        run: |
            echo "DOCKER_REPOSITORY=inbcm-backend" >> $GITHUB_ENV
            echo "${{ secrets.ENVS_DEV }}" > .env

      - name: Truncate commit SHA
        run: echo "SHORT_SHA=${GITHUB_SHA:0:7}" >> $GITHUB_ENV

      - name: Log in to Docker Registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_REPOSITORY }}:${{ github.event_name }}-${{ env.SHORT_SHA }}
            ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_REPOSITORY }}:latest

      - name: waiting images arrive in docker hub
        run: sleep 12

# Environment update

  updating_environment:   
    needs: push_to_registry
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4
      
      - name: Create file .env
        env:
          ENVS_UPDATE: ${{ secrets.ENVS_UPDATE }}
        run: echo "$ENVS_UPDATE" > src/scripts/.env

      - name: Set Docker repository name for main branch
        if: github.ref == 'refs/heads/main'
        run: echo "SCRIPT_UPDATE=updatePortainerMain.py" >> $GITHUB_ENV

      - name: Set Docker repository name for development branch
        if: github.ref == 'refs/heads/development'
        run: echo "SCRIPT_UPDATE=updatePortainerDev.py" >> $GITHUB_ENV

      - name: Configurar Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Instalar o Playwright e o Chromium
        run: |
          pip install playwright
          playwright install chromium
          pip install python-dotenv

      - name: Executar script de atualização
        run: python ./src/scripts/${{ env.SCRIPT_UPDATE }}
